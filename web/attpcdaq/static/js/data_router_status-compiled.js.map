{"version":3,"sources":["data_router_status.js"],"names":[],"mappings":";;;;;;;;;;AACA,SAAS,eAAT,CAAyB,KAAzB,EAAgC;AAC5B,QAAI,kBAAJ;AACA,QAAI,mBAAJ;AACA,QAAI,MAAM,MAAV,EAAkB;AACd,oBAAY,iBAAZ;AACA,qBAAa,cAAb;AACH,KAHD,MAIK;AACD,oBAAY,iBAAZ;AACA,qBAAa,aAAb;AACH;AACD,WACI,8BAAM,mBAAiB,SAAjB,SAA8B,UAApC,GADJ;AAGH;;IAEK,e;;;AAEF,+BAAc;AAAA;;AAAA;;AAEV,cAAK,KAAL,GAAa;AACT,qBAAS;AADA,SAAb;AAFU;AAKb;;;;wCAEe;AAAA;;AACZ,cAAE,GAAF,CAAM,uBAAN,EAA+B,IAA/B,CAAoC,gBAAQ;AACxC,uBAAK,QAAL,CAAc;AACV,6BAAS;AADC,iBAAd;AAGH,aAJD;AAKH;;;4CAEmB;AAAA;;AAChB,iBAAK,aAAL;AACA,iBAAK,OAAL,GAAe,YAAY;AAAA,uBAAM,OAAK,aAAL,EAAN;AAAA,aAAZ,EAAwC,IAAxC,CAAf;AACH;;;+CAEsB;AACnB,0BAAc,KAAK,OAAnB;AACH;;;iCAEQ;AACL,gBAAM,OAAO,KAAK,KAAL,CAAW,OAAX,CAAmB,GAAnB,CAAuB,UAAC,MAAD,EAAS,KAAT,EAAmB;AACnD,uBACI;AAAA;AAAA,sBAAI,KAAK,OAAO,IAAhB;AACI;AAAA;AAAA;AAAK,+BAAO;AAAZ,qBADJ;AAEI;AAAA;AAAA;AAAI,4CAAC,eAAD,IAAiB,QAAQ,OAAO,SAAhC;AAAJ,qBAFJ;AAGI;AAAA;AAAA;AAAI,4CAAC,eAAD,IAAiB,QAAQ,OAAO,0BAAhC;AAAJ,qBAHJ;AAII;AAAA;AAAA;AAAA;AAAA;AAJJ,iBADJ;AAQH,aATY,CAAb;AAUA,mBACI;AAAA;AAAA,kBAAK,WAAU,qBAAf;AACI;AAAA;AAAA,sBAAK,WAAU,eAAf;AAAA;AAAA,iBADJ;AAEI;AAAA;AAAA,sBAAO,WAAU,OAAjB;AACI;AAAA;AAAA;AACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA,6BADJ;AAEI;AAAA;AAAA;AAAA;AAAA,6BAFJ;AAGI;AAAA;AAAA;AAAA;AAAA,6BAHJ;AAII;AAAA;AAAA;AAAA;AAAA;AAJJ;AADJ,qBADJ;AASI;AAAA;AAAA;AACK;AADL;AATJ;AAFJ,aADJ;AAkBH;;;;EAvDyB,MAAM,S;;AA0DpC,SAAS,MAAT,CACI,oBAAC,eAAD,OADJ,EAEI,SAAS,cAAT,CAAwB,0BAAxB,CAFJ","file":"data_router_status-compiled.js","sourcesContent":["\nfunction StatusIndicator(props) {\n    let iconClass;\n    let colorClass;\n    if (props.isGood) {\n        iconClass = \"fa-check-circle\";\n        colorClass = \"text-success\";\n    }\n    else {\n        iconClass = \"fa-times-circle\";\n        colorClass = \"text-danger\";\n    }\n    return (\n        <span className={`fa ${iconClass} ${colorClass}`}></span>\n    );\n}\n\nclass DataRouterPanel extends React.Component\n{\n    constructor() {\n        super();\n        this.state = {\n            routers: [],\n        };\n    }\n\n    getRouterList() {\n        $.get('/daq/api/data_routers').done(data => {\n            this.setState({\n                routers: data,\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.getRouterList();\n        this.timerID = setInterval(() => this.getRouterList(), 5000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    render() {\n        const rows = this.state.routers.map((router, index) => {\n            return (\n                <tr key={router.name}>\n                    <td>{router.name}</td>\n                    <td><StatusIndicator isGood={router.is_online}/></td>\n                    <td><StatusIndicator isGood={router.staging_directory_is_clean}/></td>\n                    <td>Link</td>\n                </tr>\n            )\n        });\n        return (\n            <div className=\"panel panel-default\">\n                <div className=\"panel-heading\">Data Router Status</div>\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Online</th>\n                            <th>Clean</th>\n                            <th>Logs</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rows}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nReactDOM.render(\n    <DataRouterPanel />,\n    document.getElementById('data-router-status-panel')\n);"]}